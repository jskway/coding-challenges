import { slidingWindowMax } from "./slidingWindowMax";

describe("slidingWindowMax tests", () => {
  test("case 1", () => {
    const arr = [1, 3, -1, -3, 5, 3, 6, 7];
    const k = 3;
    const output = slidingWindowMax(arr, k);
    const expected = [3, 3, 5, 5, 6, 7];

    expect(output).toEqual(expected);
  });

  test("case 2", () => {
    const arr = [1, 3, -1, -3, 5, 3, 6, 7];
    const k = 2;
    const output = slidingWindowMax(arr, k);
    const expected = [3, 3, -1, 5, 5, 6, 7];

    expect(output).toEqual(expected);
  });

  test("case 3", () => {
    const arr = [
      70,
      37,
      100,
      66,
      1,
      45,
      27,
      62,
      75,
      57,
      92,
      66,
      9,
      39,
      15,
      69,
      46,
      72,
      35,
      68,
      54,
      51,
      35,
      36,
      13,
      27,
      27,
      24,
      6,
      33,
      83,
      97,
      55,
      5,
      25,
      85,
      56,
      4,
      100,
      38,
      38,
      83,
      29,
      1,
      11,
      27,
      64,
      99,
      64,
      29,
      41,
      95,
      59,
      46,
      75,
      67,
      40,
      49,
      62,
      30,
      56,
      88,
      71,
      77,
      43,
      79,
      27,
      65,
      24,
      18,
      74,
      50,
      23,
      47,
      45,
      60,
      62,
      84,
      53,
      2,
      90,
      29,
      99,
      75,
      59,
      44,
      71,
      7,
      59,
      59,
      27,
      72,
      6,
      89,
      90,
      40,
      51,
      45,
      43,
      86,
    ];
    const k = 5;
    const output = slidingWindowMax(arr, k);
    const expected = [
      100,
      100,
      100,
      66,
      75,
      75,
      92,
      92,
      92,
      92,
      92,
      69,
      69,
      72,
      72,
      72,
      72,
      72,
      68,
      68,
      54,
      51,
      36,
      36,
      27,
      33,
      83,
      97,
      97,
      97,
      97,
      97,
      85,
      85,
      100,
      100,
      100,
      100,
      100,
      83,
      83,
      83,
      64,
      99,
      99,
      99,
      99,
      99,
      95,
      95,
      95,
      95,
      75,
      75,
      75,
      67,
      62,
      88,
      88,
      88,
      88,
      88,
      79,
      79,
      79,
      79,
      74,
      74,
      74,
      74,
      74,
      60,
      62,
      84,
      84,
      84,
      90,
      90,
      99,
      99,
      99,
      99,
      99,
      75,
      71,
      71,
      71,
      72,
      72,
      89,
      90,
      90,
      90,
      90,
      90,
      86,
    ];

    expect(output).toEqual(expected);
  });
});
